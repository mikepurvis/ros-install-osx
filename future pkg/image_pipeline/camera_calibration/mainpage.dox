/**
\mainpage
\htmlinclude manifest.html

\b The camera_calibration package contains tools for calibrating monocular and stereo cameras.

\section codeapi Code API

camera_calibration does not have a code API.

\section rosapi ROS API

List of nodes:
- \b calibrationnode

<!-- START: copy for each node -->

<hr>

\subsection node_name calibrationnode

calibrationnode subscribes to ROS raw image topics, and presents a
calibration window.  It can run in both monocular and stereo modes.
The calibration window shows the current images from the cameras,
highlighting the checkerboard.  When the user presses the "CALIBRATE"
button, the node computes the camera calibration parameters.  When the
user clicks "UPLOAD", the node uploads these new calibration parameters
to the camera driver using a service call.

\subsubsection Usage
\verbatim
$ node_type1 [standard ROS args]
\endverbatim

\par Example

\verbatim
$ rosrun camera_calibration cal.py right:=/my_stereo/right/image_raw left:=/my_stereo/left/image_raw left_camera:=/my_stereo/left right_camera:=/my_stereo/right
\endverbatim


\subsubsection topics ROS topics

Subscribes to:
- \b "left": [sensor_msgs/Image] left raw image topic, for stereo cameras
- \b "right": [sensor_msgs/Image] left raw image topic, for stereo cameras
- \b "image": [sensor_msgs/Image] raw image topic, for monocular cameras

Makes service calls to:

\subsubsection services ROS services
- \b "foo_service": [std_srvs/FooType] description of foo_service
- \b "camera/set_camera_info": [sensor_msgs/SetCameraInfo] node of the camera for monocular
- \b "left_camera/set_camera_info": [sensor_msgs/SetCameraInfo] node of the left stereo camera
- \b "right_camera/set_camera_info": [sensor_msgs/SetCameraInfo] node of the left stereo camera

<!-- END: copy for each node -->

*/
